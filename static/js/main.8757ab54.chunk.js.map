{"version":3,"sources":["compoents/header/header.component.jsx","sortHelpers/mergeSortHelper.js","sortHelpers/bubbleSortHelper.js","pages/sort-visualizer/Sort-Visualizer.component.jsx","app.js","index.js"],"names":["Header","onClick","mergeSort","onToggleCheckBox","bubbleSort","className","alert","onChange","id","type","htmlFor","mergeSortInterface","array","change","comparing","length","middle","Math","floor","left","slice","right","result","leftIdx","rightIdx","min","idx","push","value","j","concat","merge","changeLogArray","comparingLogArray","bubleSortHelper","animation","i","temp","SortVisualizer","useState","setArray","invert","setInvert","useEffect","resetArray","randomInt","max","random","timeout","ms","Promise","resolve","setTimeout","a","log","mergeSortHelper","bars","document","getElementsByClassName","color","style","backgroundColor","height","animationLog","red","event","alignItems","map","item","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.8757ab54.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './header.styels.css'\r\n\r\nconst Header = ({ onClick, mergeSort, onToggleCheckBox, bubbleSort }) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <div className='nav-item' onClick={onClick}>Generate new array</div>\r\n                <div className='nav-item' onClick={mergeSort}>Merge sort</div>\r\n                <div className='nav-item' onClick={bubbleSort}>Buble sort (speedUp 20x)</div>\r\n                <div className='nav-item' onClick={() => alert('Not implemented yet')}>Insertion Sort</div>\r\n                <div className='nav-item' onClick={() => alert('Not implemented yet')}>Quick sort</div>\r\n            </div>\r\n            <div className=\"info\">\r\n                <div className='info-item'>\r\n                    <div className='dot'>\r\n                    </div>\r\n                    <div className='legend'>Comparando</div>\r\n                </div>\r\n                <div className='info-item'>\r\n                    <input onChange={onToggleCheckBox} id='invert' type='checkbox' className='dot'>\r\n                    </input>\r\n                    <label htmlFor='invert' className='legend'>Inverter</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","export default function mergeSortInterface(array) {\r\n    const change = []\r\n    const comparing = []\r\n\r\n    function merge(left, right) {\r\n        const result = []\r\n        let leftIdx = 0\r\n        let rightIdx = 0\r\n        let min = left[0].idx;\r\n\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n\r\n            comparing.push([left[leftIdx].idx, right[rightIdx].idx])\r\n\r\n            if (left[leftIdx].value < right[rightIdx].value) {\r\n                result.push({ value: left[leftIdx].value, idx: min })\r\n                change.push([left[leftIdx].value, min])\r\n                min++\r\n                leftIdx++\r\n            } else {\r\n                result.push({ value: right[rightIdx].value, idx: min })\r\n                change.push([right[rightIdx].value, min])\r\n                min++\r\n                rightIdx++\r\n            }\r\n        }\r\n\r\n        for (let j = 0; j < left.length - leftIdx; j++) {\r\n            comparing.push(comparing[comparing.length - 1])\r\n            change.push([left[leftIdx + j].value, min])\r\n            min++\r\n        }\r\n        return result.concat(left.slice(leftIdx)).concat(right.slice(rightIdx))\r\n    }\r\n\r\n\r\n    function mergeSort(array) {\r\n        if (array.length === 1) {\r\n            return array\r\n        }\r\n        const middle = Math.floor(array.length / 2)\r\n        const left = array.slice(0, middle)\r\n        const right = array.slice(middle)\r\n\r\n        return merge(\r\n            mergeSort(left),\r\n            mergeSort(right)\r\n        )\r\n    }\r\n\r\n\r\n\r\n    mergeSort(array)\r\n    return ({ changeLogArray: change, comparingLogArray: comparing })\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\nconsole.log(mergeSort([{ value: 5, idx: 0 }, { value: 4, idx: 1 }, { value: 3, idx: 2 }, { value: 7, idx: 3 }, { value: 1, idx: 4 }, { value: 9, idx: 5 }, { value: 8, idx: 6 }]))\r\n\r\nconsole.log('change :', change) */\r\n\r\n","function bubleSortHelper(array) {\r\n\r\n    const animation = []\r\n\r\n\r\n    for (let i = 0; i < array.length - 1; i++) {\r\n        for (let j = 0; j < array.length - 1 - i; j++) {\r\n            animation.push([j, j + 1, 0])\r\n            animation.push([j, j + 1, 0])\r\n            if (array[j].value >= array[j + 1].value) {\r\n                animation.push([j, j + 1, 1])\r\n                let temp = array[j]\r\n                array[j] = array[j + 1]\r\n                array[j + 1] = temp\r\n            }\r\n        }\r\n    }\r\n    return (animation)\r\n}\r\n\r\nexport default bubleSortHelper\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../compoents/header/header.component\";\r\nimport './Sort-Visualizer.styles.css'\r\nimport mergeSortHelper from '../../sortHelpers/mergeSortHelper'\r\nimport bubleSortHelper from '../../sortHelpers/bubbleSortHelper'\r\n\r\nconst SortVisualizer = () => {\r\n\r\n    const [array, setArray] = useState([{}])\r\n    const [invert, setInvert] = useState(false)\r\n\r\n    useEffect(() => {\r\n        resetArray()\r\n    }, [])\r\n\r\n\r\n\r\n    const onToggleCheckBox = (event) => {\r\n        setInvert(!invert)\r\n    }\r\n\r\n    const resetArray = () => {\r\n        const array = []\r\n        for (let i = 0; i < 100; i++) {\r\n            array.push({ value: randomInt(5, 100), idx: i })\r\n        }\r\n        setArray(array)\r\n    }\r\n\r\n\r\n    const randomInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    const onClick = () => {\r\n        resetArray()\r\n    }\r\n\r\n    function timeout(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    const mergeSort = async () => {\r\n        const log = mergeSortHelper(array)\r\n        for (let i = 0; i < log.comparingLogArray.length; i++) {\r\n            const bars = document.getElementsByClassName('bar')\r\n            for (let j = 0; j < 2; j++) {\r\n                await timeout(20);\r\n                const color = j === 0 ? 'red' : 'aqua'\r\n                bars[log.comparingLogArray[i][0]].style.backgroundColor = color\r\n                bars[log.comparingLogArray[i][1]].style.backgroundColor = color\r\n\r\n                if (j === 1) {\r\n                    bars[log.changeLogArray[i][1]].style.height = 6 * log.changeLogArray[i][0] + 'px';\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n    const bubbleSort = async () => {\r\n        const animationLog = bubleSortHelper(array)\r\n        let red = true\r\n        for (let i = 0; i < animationLog.length; i++) {\r\n            const bars = document.getElementsByClassName('bar')\r\n            await timeout(0.5);\r\n            if (animationLog[i][2] === 0) {\r\n                if (red) {\r\n                    bars[animationLog[i][0]].style.backgroundColor = 'red'\r\n                    bars[animationLog[i][1]].style.backgroundColor = 'red'\r\n                    red = false\r\n                } else {\r\n                    bars[animationLog[i][0]].style.backgroundColor = 'aqua'\r\n                    bars[animationLog[i][1]].style.backgroundColor = 'aqua'\r\n                    red = true\r\n                }\r\n            } else if (animationLog[i][2] === 1) {\r\n\r\n                let temp = bars[animationLog[i][0]].style.height\r\n                bars[animationLog[i][0]].style.height = bars[animationLog[i][1]].style.height\r\n                bars[animationLog[i][1]].style.height = temp\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header bubbleSort={bubbleSort} onToggleCheckBox={onToggleCheckBox} mergeSort={mergeSort} onClick={onClick} />\r\n            <div array={array} className=\"array\" style={{ alignItems: `${invert ? 'flex-start' : 'flex-end'}` }}>\r\n\r\n                {\r\n                    array.map((item, idx) => {\r\n                        return (\r\n                            <div className=\"bar\" key={idx} style={{ height: `${6 * item.value}px` }}>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default SortVisualizer","import React from \"react\";\r\nimport SortVisualizer from \"./pages/sort-visualizer/Sort-Visualizer.component\";\r\nimport './app.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <SortVisualizer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}